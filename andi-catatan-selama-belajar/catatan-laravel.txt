QUOTE API
--------------------------

MENGAMBIL DATA FAKE DAN MENAMPILKAN MENGGUNAKAN GET
===================================================

Setelah menginstall laravel dan berhasil menjalankan php artisan serve, selanjutnya kita akan menginstall apa yang dibutuhkan selama belajar rest api :

1. install API
php artisan install:api,
kemudian coba cek env apakah sudah terhubung ke database nya
ganti database name sesuai yang sesuai di env

2 install controller dan model
artisan make controller > QuoteController > api > yes > Quote

tambahaan di api.php
Route::apiResource('/quote', QuoteController::class);

3 Model migration Factory dan Seeder

Quote.php
tambahkan protected
make migration create_quote_table >yes > quotes >
di file itu tambahkan text dan author

selanjutnya buat factory
make factory > QuoteFactory > yes > Quote
tambahkan  'text' => $this->faker->text(),

selanjutnya
make seeder > QuoteSeeder
tambahkan Quote::factory()
            ->count(10)
            ->create();

selanjtunya cari DatabaseSeeder.php
tambahkan $this->call([
            QuoteSeeder::class,
        ]);

Terakhir kita mirgate refresh --seed

4 mengambil satu data api hanya menampilkan id dan text dan author
make quote resource > QuoteResource > no
tambahkan
    'id' => $this->id,
    'text' => $this->text,
    'author' =>strtoupper($this->author),

selanjutnya di controller tambhakn di show
return new QuoteResource($quote);

5 pagination dan list api
kalau kita perhatikan route:list untuk menampilkan semua data
    api/quote .......... quote.index â€º QuoteController@index

selanjutnya tambahkan di controller untuk menampilkan semua list data
    public function index()
    {
        return QuoteResource::collection(Quote::all());
    }

bagaimana kalau menampilkan per page contoh per 5
    {
        return QuoteResource::collection(Quote::paginate(5));
    }

6 bagaimana kalau kita tidak mau pakai data {} tampilan dari json itu kan ada data {}
Tambahkan di appserviceprovider
public function boot(): void
    {
        //menghilangkan data wrapping
        QuoteResource::withoutWrapping();

        // bagaimana kalau kita ingin menghilangkan data wrapping di semua resource
        JsonResource::withoutWrapping();
    }

Namun fitur ini saat ini kita matikana

==================================================

MEMBUAT DATA

1 kita buat meke request >StoreQuoteRequest >
di file ini tambahkan true
 public function authorize(): bool
    {
        return true;
    }

public function rules(): array
    {
           //validasi data yang masuk
         return [
            'text' => 'required|min:20',
            'author' => 'required|min:10,',
        ];
    }

di controller function store
    public function store(StoreQuoteRequest $request)
    {
        //
        return response()->json('hello');
    }

mungkin catatan disini untuk membuat data kita butuh validasi setelah ok

ganti respon di controller menjadi di bawah ini
public function store(StoreQuoteRequest $request)
    {
        //
        //return response()->json('hello');
        return new QuoteResource(Quote::create($request->validated()));
    }

===========================================
UPDATE DATA LIMO 14 Mei 2025

1. tambahkan di controller
Route::apiResource('/quote', QuoteController::class);

2. make request > UpdateQuoteRequest

rubah ke true
public function authorize(): bool
    {
        return true;
    }

validasinya
return [
            //
            'text' => 'required|min:20',
            'author' => 'required|min:10,',
        ];

3 di controller update
tambahkan
return new QuoteResource(tap($quote) ->update($request->validated()));
    
